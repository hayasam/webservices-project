<?xml version='1.0' encoding='UTF-8'?><!-- Published by JAX-WS RI at http://jax-ws.dev.java.net. RI's version is Metro/2.1.1 (branches/2.1-6844; 2011-07-29T12:07:24+0000) JAXWS-RI/2.2.5 JAXWS/2.2. --><definitions xmlns="http://schemas.xmlsoap.org/wsdl/" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:tns="http://j2ee.netbeans.org/wsdl/LameDuck/java/flight" xmlns:plnk="http://docs.oasis-open.org/wsbpel/2.0/plnktype" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" name="flight" targetNamespace="http://j2ee.netbeans.org/wsdl/LameDuck/java/flight">
    <types>
        <xsd:schema xmlns:tns="http://j2ee.netbeans.org/wsdl/LameDuck/java/flight" targetNamespace="http://j2ee.netbeans.org/wsdl/LameDuck/java/flight">
            <xsd:complexType name="flightInfoType">
                <xsd:sequence>
                    <xsd:element name="bookingNr" type="xsd:int"/>
                    <xsd:element name="price" type="xsd:int"/>
                    <xsd:element name="nameOfReservService" type="xsd:string"/>
                    <xsd:element name="flight" type="tns:flightType"/>
                    <xsd:element name="status" type="xsd:string"/>
                </xsd:sequence>
            </xsd:complexType>
            <xsd:complexType name="flightType">
                <xsd:sequence>
                    <xsd:element name="startAirport" type="xsd:string"/>
                    <xsd:element name="destinationAirport" type="xsd:string"/>
                    <xsd:element name="dateDeparture" type="xsd:dateTime"/>
                    <xsd:element name="dateArrival" type="xsd:dateTime"/>
                    <xsd:element name="carrier" type="xsd:string"/>
                </xsd:sequence>
            </xsd:complexType>
            <xsd:complexType name="getFlightInputType">
                <xsd:sequence>
                    <xsd:element name="startAirport" type="xsd:string"/>
                    <xsd:element name="endAirport" type="xsd:string"/>
                    <xsd:element name="date" type="xsd:date"/>
                </xsd:sequence>
            </xsd:complexType>
            <xsd:element name="flightInfoArray">
                <xsd:complexType>
                    <xsd:sequence>
                        <xsd:element name="flightInfo" type="tns:flightInfoType" minOccurs="0" maxOccurs="unbounded"/>
                    </xsd:sequence>
                </xsd:complexType>
            </xsd:element>
            <xsd:element name="getFlightInput" type="tns:getFlightInputType"/>
            <xsd:complexType name="creditCardInfoType">
                <xsd:sequence>
                    <xsd:element name="holderName" type="xsd:string"/>
                    <xsd:element name="cardNumber" type="xsd:string"/>
                    <xsd:element name="expirationDate" type="tns:expirationDateType"/>
                </xsd:sequence>
            </xsd:complexType>
            <xsd:complexType name="bookFlightInputType">
                <xsd:sequence>
                    <xsd:element name="bookingNr" type="xsd:int"/>
                    <xsd:element name="creditCardInfo" type="tns:creditCardInfoType"/>
                </xsd:sequence>
            </xsd:complexType>
            <xsd:element name="bookFlightInput" type="tns:bookFlightInputType"/>
            <xsd:element name="bookFlightOutput" type="xsd:boolean"/>
            <xsd:element name="bookFlightFault" type="xsd:string"/>
            <xsd:complexType name="cancelFlightInputType">
                <xsd:sequence>
                    <xsd:element name="bookingNr" type="xsd:int"/>
                    <xsd:element name="price" type="xsd:double"/>
                    <xsd:element name="creditCardInfo" type="tns:creditCardInfoType"/>
                </xsd:sequence>
            </xsd:complexType>
            <xsd:element name="cancelFlightOuput" type="xsd:boolean"/>
            <xsd:element name="cancelFlightFault" type="xsd:string"/>
            <xsd:element name="cancelFlightInput" type="tns:cancelFlightInputType"/>
            <xsd:complexType name="expirationDateType">
                <xsd:sequence>
                    <xsd:element name="month" type="xsd:int"/>
                    <xsd:element name="year" type="xsd:int"/>
                </xsd:sequence>
            </xsd:complexType>
        </xsd:schema>
    </types>
    <message name="flightOperationRequest">
        <part name="getFlightsInput" element="tns:getFlightInput"/>
    </message>
    <message name="flightOperationResponse">
        <part name="getFlightsOutput" element="tns:flightInfoArray"/>
    </message>
    <message name="bookFlightRequest">
        <part name="bookFlightInput" element="tns:bookFlightInput"/>
    </message>
    <message name="bookFlightResponse">
        <part name="bookFlightOutput" element="tns:bookFlightOutput"/>
    </message>
    <message name="bookFlightFault">
        <part name="bookFlightFault" element="tns:bookFlightFault"/>
    </message>
    <message name="cancelFlightRequest">
        <part name="cancelFlightInput" element="tns:cancelFlightInput"/>
    </message>
    <message name="cancelFlightResponse">
        <part name="cancelFlightOutput" element="tns:cancelFlightOuput"/>
    </message>
    <message name="cancelFlightFault">
        <part name="cancelFlightFault" element="tns:cancelFlightFault"/>
    </message>
    <portType name="flightPortType">
        <operation name="getFlightsOperation">
            <input name="input1" message="tns:flightOperationRequest"/>
            <output name="output1" message="tns:flightOperationResponse"/>
        </operation>
        <operation name="bookFlightOperation">
            <input name="input2" message="tns:bookFlightRequest"/>
            <output name="output2" message="tns:bookFlightResponse"/>
            <fault name="fault1" message="tns:bookFlightFault"/>
        </operation>
        <operation name="cancelFlightOperation">
            <input name="input3" message="tns:cancelFlightRequest"/>
            <output name="output3" message="tns:cancelFlightResponse"/>
            <fault name="fault1" message="tns:cancelFlightFault"/>
        </operation>
    </portType>
    <binding name="flightPortTypeBinding" type="tns:flightPortType">
        <soap:binding style="document" transport="http://schemas.xmlsoap.org/soap/http"/>
        <operation name="getFlightsOperation">
            <soap:operation/>
            <input name="input1">
                <soap:body use="literal"/>
            </input>
            <output name="output1">
                <soap:body use="literal"/>
            </output>
        </operation>
        <operation name="bookFlightOperation">
            <input name="input2">
             <soap:body use="literal"/>
            </input>
            <output name="output2">
                <soap:body use="literal"/>
            </output>
            <fault name="fault1">
                <soap:fault name="fault1" use="literal"/>
            </fault>
        </operation>
        <operation name="cancelFlightOperation">
            <input name="input3">
                <soap:body use="literal"/>
            </input>            
            <output name="output3">
                <soap:body use="literal"/>
            </output>
            <fault name="fault1">
                 <soap:fault name="fault1" use="literal"/>
            </fault>
        </operation>
    </binding>
    <service name="flightService">
        <port name="flightPortTypeBindingPort" binding="tns:flightPortTypeBinding">
            <soap:address location="http://localhost:8080/LameDuck/flightService"/>
        </port>
    </service>
    <plnk:partnerLinkType name="flight">
        <!-- A partner link type is automatically generated when a new port type is added. Partner link types are used by BPEL processes. 
In a BPEL process, a partner link represents the interaction between the BPEL process and a partner service. Each partner link is associated with a partner link type.
A partner link type characterizes the conversational relationship between two services. The partner link type can have one or two roles.-->
        <plnk:role name="flightPortTypeRole" portType="tns:flightPortType"/>
    </plnk:partnerLinkType>
</definitions>